name: GraalVM Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        java-version: [ '21' ]
        distribution: [ 'graalvm-community' ]
      fail-fast: false
    name: ${{ matrix.os }} JDK ${{ matrix.graalvm }}.${{ matrix.java }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.distribution }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'gradle'
      - name: Verify Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build with Gradle
        run: ./gradlew build asciidoctor nativeCompile --scan --info --stacktrace
      - name: Upload LedgerExport tool as artifact
        uses: actions/upload-artifact@v4
        with:
          name: LedgerExport-${{ matrix.os }}
          path: ledger-export-tool/build/native/nativeCompile/LedgerExport
